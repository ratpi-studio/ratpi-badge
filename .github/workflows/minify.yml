name: Minify, Obfuscate, Version, and Deploy Badge

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  minify:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Obfuscator
        run: npm install --save-dev javascript-obfuscator

      - name: Increment Version
        id: increment_version
        run: |
          # VÃ©rifier si une version est spÃ©cifiÃ©e dans le dernier message de commit
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          if [[ $COMMIT_MESSAGE =~ \[version:\ ([0-9]+\.[0-9]+\.[0-9]+)\] ]]; then
            NEW_VERSION="${BASH_REMATCH[1]}"
            echo "Version found in commit message: $NEW_VERSION"
          else
            # IncrÃ©mentation automatique si aucune version n'est spÃ©cifiÃ©e
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF++; print}')
            echo "No version found in commit message. Incrementing to: $NEW_VERSION"
          fi
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          jq ".version = \"$NEW_VERSION\"" package.json > package.tmp.json && mv package.tmp.json package.json
          echo "Version updated to $NEW_VERSION"

      - name: Commit Updated Version
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add package.json
          if [ -n "${NEW_VERSION}" ]; then
            git commit -m "Bump version to ${NEW_VERSION} [skip ci]"
          else
            git commit -m "Bump version [skip ci]"
          fi
          git pull --rebase origin main
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create directory for minified files
        run: |
          rm -rf minified/*
          mkdir -p minified

      - name: Minify and Obfuscate HTML
        run: |
          echo "Minifying and obfuscating index.html..."
          npx html-minifier-terser index.html -o minified/index.min.${NEW_VERSION}.html \
          --collapse-boolean-attributes \
          --collapse-inline-tag-whitespace \
          --collapse-whitespace \
          --conservative-collapse \
          --decode-entities \
          --minify-css true \
          --minify-js true \
          --remove-comments \
          --remove-empty-attributes \
          --remove-optional-tags \
          --remove-redundant-attributes \
          --remove-script-type-attributes \
          --remove-style-link-type-attributes \
          --sort-attributes \
          --sort-class-name \
          --use-short-doctype

      - name: Obfuscate and Minify badge.js
        run: |
          echo "Obfuscating and minifying badge.js..."
          if [ ! -f "badge.js" ]; then
            echo "Error: badge.js not found!" >&2
            exit 1
          fi

           npx javascript-obfuscator badge.js --output minified/badge.min.${NEW_VERSION}.js \
            --compact true \
            --control-flow-flattening true \
            --dead-code-injection true \
            --debug-protection false \
            --disable-console-output true \
            --identifier-names-generator hexadecimal \
            --rename-globals true \
            --self-defending true \
            --string-array true \
            --string-array-encoding base64 \
            --string-array-index-shift true \
            --transform-object-keys true \
            --unicode-escape-sequence true

      - name: Commit and Push Minified Files
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add minified/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            if [ -n "${NEW_VERSION}" ]; then
              git commit -m "Minified & obfuscated files for version ${NEW_VERSION} [skip ci]"
            else
              git commit -m "Minified & obfuscated files [skip ci]"
            fi
            git pull --rebase origin main
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag
        run: |
          git tag -a "v${NEW_VERSION}" -m "Release version ${NEW_VERSION}"
          git push origin "v${NEW_VERSION}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Summary
        run: |
          echo "# ðŸš€ Obfuscated Files Summary" >> $GITHUB_STEP_SUMMARY
          echo "## File Sizes After Obfuscation" >> $GITHUB_STEP_SUMMARY
          
          for file in minified/*; do
            size=$(stat -c%s "$file")
            echo "- [$(basename "$file")](https://ratpi-studio.github.io/ratpi-badge/minified/$(basename "$file")) : ${size} bytes" >> $GITHUB_STEP_SUMMARY
          done
